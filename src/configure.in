AC_INIT(configure.in)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(hypnos, 0.1)

AC_LANG_CPLUSPLUS
AC_PROG_CXX
AC_PROG_AWK
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AM_PROG_LIBTOOL

AM_DL()
AM_PATH_WEFTS()
AC_ICC_COMPILER()
AC_WINENV()
AC_HYPNOSRELOC()
AC_PCH()

AC_OBJEXT
AC_EXEEXT

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([fcntl.h limits.h memory.h signal.h stdint.h stdlib.h sys/time.h sys/timeb.h sys/mman.h sys/utsname.h unistd.h netinet/in.h])

AC_LANG_CPLUSPLUS
# Those are all stl headers... checking both for standard and deprecated header (and gcc extension when needed)
AC_CHECK_HEADERS([ios ios.h sstream sstream.h iosfwd iosfwd.h iostream iostream.h ostream ostream.h fstream fstream.h iomanip iomanip.h set set.h vector vector.h slist ext/slist slist.h cassert assert.h string string.h hash_map ext/hash_map hash_map.h map map.h list list.h])

# Check for windows headers only under windows
# And check for fork() or ntoh/hton functions only if not under windows
# (Windows defines these in winsock library, so we are sure they are present)
# Fork is used to daemonize on unix environments, on Windows we use the service stuff

if test "$is_win" == "yes"; then
	DEFS="$DEFS -DWIN32_LEAN_AND_MEAN"
	CPPFLAGS="$CPPFLAGS -DWIN32_LEAN_AND_MEAN"
	
	AC_CHECK_HEADERS([conio.h windows.h winnt.h winsock2.h winbase.h winreg.h wincon.h shlwapi.h],,,
	[[#ifdef HAVE_WINDOWS_H
	#include <windows.h>
	#endif
	
	#ifdef HAVE_WINNT_H
	#include <winnt.h>
	#endif
	]])

	if test "$ac_cv_header_winsock2_h" != "yes"; then
		AC_CHECK_HEADERS([winsock.h],,,
		[[#ifdef HAVE_WINDOWS_H
		#include <windows.h>
		#endif
		
		#ifdef HAVE_WINNT_H
		#include <winnt.h>
		#endif
		]])
	fi
else
	AC_FUNC_FORK
	AC_CHECK_FUNCS([ntohl ntohs htonl htons])
fi

AM_CONDITIONAL(WIN32, test x$is_win == "xyes")

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_TYPE_PID_T
AC_C_RESTRICT
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM
AC_TYPE_SIZE_T

# Checks for library functions.
AC_FUNC_MALLOC
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_FUNC_MMAP
AC_CHECK_FUNCS([basename ftime gettimeofday memset munmap strchr strstr strtol strtoul strtoull strlwr strupr uname asprintf strcmpi strcasecmp strncmpi strncasecmp kbhit getch sigaction])

if test "$is_icc" == "yes"; then
	WEFTS_LIBS=$(echo $WEFTS_LIBS | sed -e 's/-lstdc++//')
	CPPLIB=""
else
	CPPLIB="-lstdc++"
fi

# Adding include dirs and WEFTS_ variables
INCLUDES='-I$(top_builddir) -I$(top_srcdir)/libhypnos/ -I$(top_srcdir)/includes/'
if test "$use_pch" == "yes"; then
	PCHINCLUDES='-I$(top_builddir)/libhypnos/ -I$(top_builddir)/includes/'
else
	PCHINCLUDES=''
fi

TMPFLAGS="$WEFTS_CXXFLAGS -Wall"
AC_TEST_CFLAGS($TMPFLAGS)
AC_TEST_CXXFLAGS($TMPFLAGS)

CPPFLAGS="$INCLUDES $CPPFLAGS $WEFTS_CXXFLAGS $MXML_CXXFLAGS $DEFDIRS $BINRELOC_CFLAGS -DHAVE_CONFIG_H "
CFLAGS="$CFLAGS $WORKING_CFLAGS $PCHINCLUDES $CPPFLAGS"
CXXFLAGS="$CXXFLAGS $WORKING_CXXFLAGS $PCHINCLUDES $CPPFLAGS"

if test "x$is_icc" == "xyes"; then
	CFLAGS="$CFLAGS -wd143 -wd177 -wd279 -wd383 -wd810 -wd981 "
	CXXFLAGS="$CXXFLAGS -wd143 -wd177 -wd279 -wd383 -wd810 -wd981 "
fi

if test "x$GCC" == "xyes"; then
	CFLAGS="$CFLAGS -Wno-switch-enum "
	CXXFLAGS="$CXXFLAGS -Wno-switch-enum -Wno-reorder "
fi

AC_SUBST(CPPLIB)
AC_SUBST(CXXFLAGS)
AC_SUBST(CFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(WEFTS_LIBS)
AC_SUBST(BINRELOC_LIBS)
AC_SUBST(BINRELOC_CFLAGS)
AC_SUBST(CPPFLAGS)

AC_CONFIG_FILES([Makefile
                 libhypnos/Makefile
                 libhypnos/muls/Makefile
		 libhypnos/libhypnos/Makefile
		 libhypnos/libhypnos/muls/Makefile
                 utils/Makefile
                 utils/clilist/Makefile
                 src/Makefile
                 src/archetypes/Makefile
                 src/archs/Makefile
                 src/backend/Makefile
                 src/encryption/Makefile
                 src/extras/Makefile
                 src/networking/Makefile
                 src/objects/Makefile
                 src/objects/cchar/Makefile
                 src/objects/citem/Makefile
                 src/objects/cnpc/Makefile
                 src/skills/Makefile])

AC_OUTPUT
